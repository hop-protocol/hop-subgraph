specVersion: 0.0.2
description: Hop Protocol
repository: https://github.com/hop-protocol/subgraph/
{{#isMainnet}}
schema:
  file: ./L1_Bridge_schema.graphql
dataSources:
{{#tokens}}
{{^isUSDCe}}
  - kind: ethereum/contract
    name: {{dataSourceName}}
    network: {{network}}
    source:
      address: '{{address}}'
      abi: Token
      startBlock: {{startBlock}}
    mapping:
      kind: ethereum/events
      apiVersion: 0.0.7
      language: wasm/assemblyscript
      entities:
        - Transfer
      abis:
        - name: Token
          file: ./abis/Token.json
      eventHandlers:
        - event: Transfer(indexed address,indexed address,uint256)
          handler: handleTransfer
          receipt: true
      file: ./src/L1_token_mapping_{{network}}_{{token}}.ts
{{/isUSDCe}}
{{/tokens}}
{{#bridges}}
  - kind: ethereum/contract
    name: {{dataSourceName}}
    network: {{network}}
    source:
      address: '{{address}}'
      abi: L1_Bridge
      startBlock: {{startBlock}}
    mapping:
      kind: ethereum/events
      apiVersion: 0.0.7
      language: wasm/assemblyscript
      entities:
        - BonderAdded
        - BonderRemoved
        - ChallengeResolved
        - MultipleWithdrawalsSettled
        - Stake
        - TransferBondChallenged
        - TransferRootBonded
        - TransferRootConfirmed
        - TransferRootSet
        - TransferSentToL2
        - Unstake
        - WithdrawalBondSettled
        - WithdrawalBonded
        - Withdrew
      abis:
        - name: L1_Bridge
          file: ./abis/L1_Bridge.json
      eventHandlers:
        - event: BonderAdded(indexed address)
          handler: handleBonderAdded
          receipt: true
        - event: BonderRemoved(indexed address)
          handler: handleBonderRemoved
          receipt: true
        - event: ChallengeResolved(indexed bytes32,indexed bytes32,uint256)
          handler: handleChallengeResolved
          receipt: true
        - event: MultipleWithdrawalsSettled(indexed address,indexed bytes32,uint256)
          handler: handleMultipleWithdrawalsSettled
          receipt: true
        - event: Stake(indexed address,uint256)
          handler: handleStake
          receipt: true
        - event: TransferBondChallenged(indexed bytes32,indexed bytes32,uint256)
          handler: handleTransferBondChallenged
          receipt: true
        - event: TransferRootBonded(indexed bytes32,uint256)
          handler: handleTransferRootBonded
          receipt: true
        - event: TransferRootConfirmed(indexed uint256,indexed uint256,indexed bytes32,uint256)
          handler: handleTransferRootConfirmed
          receipt: true
        - event: TransferRootSet(indexed bytes32,uint256)
          handler: handleTransferRootSet
          receipt: true
        - event: TransferSentToL2(indexed uint256,indexed address,uint256,uint256,uint256,indexed address,uint256)
          handler: handleTransferSentToL2
          receipt: true
        - event: Unstake(indexed address,uint256)
          handler: handleUnstake
          receipt: true
        - event: WithdrawalBondSettled(indexed address,indexed bytes32,indexed bytes32)
          handler: handleWithdrawalBondSettled
          receipt: true
        - event: WithdrawalBonded(indexed bytes32,uint256)
          handler: handleWithdrawalBonded
          receipt: true
        - event: Withdrew(indexed bytes32,indexed address,uint256,bytes32)
          handler: handleWithdrew
          receipt: true
      file: ./src/L1_mapping_{{network}}_{{token}}.ts
{{/bridges}}
{{#cctpBridges}}
  - kind: ethereum/contract
    name: {{dataSourceName}}
    network: {{network}}
    source:
      address: '{{cctpAddress}}'
      abi: L2_HopCCTPImplementation
      startBlock: {{startBlock}}
    mapping:
      kind: ethereum/events
      apiVersion: 0.0.7
      language: wasm/assemblyscript
      entities:
        - CCTPTransferSent
      abis:
        - name: L2_HopCCTPImplementation
          file: ./abis/L2_HopCCTPImplementation.json
      eventHandlers:
        - event: CCTPTransferSent(indexed uint64,indexed uint256,indexed address,uint256,uint256)
          handler: handleCCTPTransferSent
          receipt: true
      file: ./src/L1_HopCCTPImplementation_mapping_{{network}}_{{token}}.ts
  - kind: ethereum/contract
    name: CCTPMessageTransmitter{{token}}
    network: {{network}}
    source:
      address: '{{cctpMessageTransmitter}}'
      abi: CCTPMessageTransmitter
      startBlock: {{startBlock}}
    mapping:
      kind: ethereum/events
      apiVersion: 0.0.7
      language: wasm/assemblyscript
      entities:
        - CCTPMessageReceived
      abis:
        - name: CCTPMessageTransmitter
          file: ./abis/CCTPMessageTransmitter.json
      eventHandlers:
        - event: MessageReceived(indexed address,uint32,indexed uint64,bytes32,bytes)
          handler: handleMessageReceived
          receipt: true
      file: ./src/CCTPMessageTransmitter_mapping_{{network}}_{{token}}.ts
{{/cctpBridges}}
{{/isMainnet}}
{{^isMainnet}}
schema:
  file: ./L2_Bridge_schema.graphql
dataSources:
{{#amms}}
  - kind: ethereum/contract
    name: {{dataSourceName}}
    network: {{network}}
    source:
      address: '{{address}}'
      abi: L2_Amm
      startBlock: {{startBlock}}
    mapping:
      kind: ethereum/events
      apiVersion: 0.0.7
      language: wasm/assemblyscript
      entities:
        - TokenSwap
        - AddLiquidity
        - RemoveLiquidity
        - RemoveLiquidityOne
        - RemoveLiquidityImbalance
      abis:
        - name: L2_Amm
          file: ./abis/L2_Amm.json
      eventHandlers:
        - event: TokenSwap(indexed address,uint256,uint256,uint128,uint128)
          handler: handleTokenSwap
          receipt: true
        - event: AddLiquidity(indexed address,uint256[],uint256[],uint256,uint256)
          handler: handleAddLiquidity
          receipt: true
        - event: RemoveLiquidity(indexed address,uint256[],uint256)
          handler: handleRemoveLiquidity
          receipt: true
        - event: RemoveLiquidityOne(indexed address,uint256,uint256,uint256,uint256)
          handler: handleRemoveLiquidityOne
          receipt: true
        - event: RemoveLiquidityImbalance(indexed address,uint256[],uint256[],uint256,uint256)
          handler: handleRemoveLiquidityImbalance
          receipt: true
      file: ./src/L2_Amm_mapping_{{network}}_{{token}}.ts
{{/amms}}
{{#bridges}}
  - kind: ethereum/contract
    name: {{dataSourceName}}
    network: {{network}}
    source:
      address: '{{address}}'
      abi: L2_Bridge
      startBlock: {{startBlock}}
    mapping:
      kind: ethereum/events
      apiVersion: 0.0.7
      language: wasm/assemblyscript
      entities:
        - BonderAdded
        - BonderRemoved
        - MultipleWithdrawalsSettled
        - Stake
        - TransferFromL1Completed
        - TransferRootSet
        - TransferSent
        - TransfersCommitted
        - Unstake
        - WithdrawalBondSettled
        - WithdrawalBonded
        - Withdrew
      abis:
        - name: L2_Bridge
          file: ./abis/L2_Bridge.json
      eventHandlers:
        - event: BonderAdded(indexed address)
          handler: handleBonderAdded
          receipt: true
        - event: BonderRemoved(indexed address)
          handler: handleBonderRemoved
          receipt: true
        - event: MultipleWithdrawalsSettled(indexed address,indexed bytes32,uint256)
          handler: handleMultipleWithdrawalsSettled
          receipt: true
        - event: Stake(indexed address,uint256)
          handler: handleStake
          receipt: true
        - event: TransferFromL1Completed(indexed address,uint256,uint256,uint256,indexed address,uint256)
          handler: handleTransferFromL1Completed
          receipt: true
        - event: TransferRootSet(indexed bytes32,uint256)
          handler: handleTransferRootSet
          receipt: true
        - event: TransferSent(indexed bytes32,indexed uint256,indexed address,uint256,bytes32,uint256,uint256,uint256,uint256)
          handler: handleTransferSent
          receipt: true
        - event: TransfersCommitted(indexed uint256,indexed bytes32,uint256,uint256)
          handler: handleTransfersCommitted
          receipt: true
        - event: Unstake(indexed address,uint256)
          handler: handleUnstake
          receipt: true
        - event: WithdrawalBondSettled(indexed address,indexed bytes32,indexed bytes32)
          handler: handleWithdrawalBondSettled
          receipt: true
        - event: WithdrawalBonded(indexed bytes32,uint256)
          handler: handleWithdrawalBonded
          receipt: true
        - event: Withdrew(indexed bytes32,indexed address,uint256,bytes32)
          handler: handleWithdrew
          receipt: true
      file: ./src/L2_mapping_{{network}}_{{token}}.ts
{{/bridges}}
{{#cctpBridges}}
  - kind: ethereum/contract
    name: {{dataSourceName}}
    network: {{network}}
    source:
      address: '{{cctpAddress}}'
      abi: L2_HopCCTPImplementation
      startBlock: {{startBlock}}
    mapping:
      kind: ethereum/events
      apiVersion: 0.0.7
      language: wasm/assemblyscript
      entities:
        - CCTPTransferSent
      abis:
        - name: L2_HopCCTPImplementation
          file: ./abis/L2_HopCCTPImplementation.json
      eventHandlers:
        - event: CCTPTransferSent(indexed uint64,indexed uint256,indexed address,uint256,uint256)
          handler: handleCCTPTransferSent
          receipt: true
      file: ./src/L2_HopCCTPImplementation_mapping_{{network}}_{{token}}.ts
  - kind: ethereum/contract
    name: CCTPMessageTransmitter{{token}}
    network: {{network}}
    source:
      address: '{{cctpMessageTransmitter}}'
      abi: CCTPMessageTransmitter
      startBlock: {{startBlock}}
    mapping:
      kind: ethereum/events
      apiVersion: 0.0.7
      language: wasm/assemblyscript
      entities:
        - CCTPMessageReceived
      abis:
        - name: CCTPMessageTransmitter
          file: ./abis/CCTPMessageTransmitter.json
      eventHandlers:
        - event: MessageReceived(indexed address,uint32,indexed uint64,bytes32,bytes)
          handler: handleMessageReceived
          receipt: true
      file: ./src/CCTPMessageTransmitter_mapping_{{network}}_{{token}}.ts
{{/cctpBridges}}
{{/isMainnet}}
